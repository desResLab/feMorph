# Include Source in Current Folder
AUX_SOURCE_DIRECTORY(. SRC_LIST)

# Use the Boost Libraries
FIND_PACKAGE(Boost 1.40 REQUIRED)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})

# Get Trilinos as one entity
IF(useTrilinos)
  FIND_PACKAGE(Trilinos)
  # Include Trilinos Classes
  AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src/trilinos SRC_TRILINOS)
  INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src/trilinos)
  SET(SRC_LIST ${SRC_LIST} ${SRC_TRILINOS})
ENDIF()

# Add Compilation Flags
SET( SCH_FLAGS "-O3 -std=c++0x" )
SET( CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${SCH_FLAGS}" )
SET( CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} ${SCH_FLAGS}" )

# WRITE EXECUTABLE IN BIN
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Add CSparse Include and Lib Folder
IF(useCSparse)
  AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src/csparse SRC_CSPARSE)
  INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src/csparse)
  SET(SRC_LIST ${SRC_LIST} ${SRC_CSPARSE})
ENDIF()

ADD_EXECUTABLE(${PROJECT_NAME} ${SRC_LIST})

IF(useMPI)
  TARGET_LINK_LIBRARIES(${PROJECT_NAME} mpich)
ENDIF()

IF(useTrilinos)
  TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES})
ENDIF()

IF(useArmadillo)
  TARGET_LINK_LIBRARIES(${PROJECT_NAME} armadillo)
ENDIF()

# Always Include the Boost Library
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${Boost_LIBRARIES})
